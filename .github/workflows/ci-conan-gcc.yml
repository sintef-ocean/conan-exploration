---
name: GCC Conan

on: [push, workflow_dispatch]

env:
  CONAN_UPLOAD: ${{ secrets.CONAN_URL }}
  CONAN_PASSWORD_SINTEF: ${{ secrets.CONAN_PASSWORD }}
  CONAN_LOGIN_USERNAME_SINTEF: ${{ secrets.CONAN_USER }}

jobs:
  conan-with-gcc:
    name: Conan
    runs-on: ubuntu-22.04
    env:
      USER_CHANNEL: "${{ matrix.conan == '1.0' && 'sintef/stable' || '--user sintef --channel stable' }}"
      UPLOAD_FLAGS: "${{ matrix.conan == '1.0' && '--all' || '' }}"
    strategy:
      fail-fast: false
      matrix:
        conan: ["1.0", "2.0"]
        profile: [gcc10]
        build_type: [Debug, Release]
    steps:
      - uses: actions/checkout@v3
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo pip3 install --upgrade setuptools pip
          sudo pip3 install --upgrade conan~=${{ matrix.conan }}
      - name: Configure Conan
        run: |
          conan remote add sintef ${{ env.CONAN_UPLOAD }}
      - name: Get package name Conan 1
        if: matrix.conan == '1.0'
        run: |
          echo "package_name=$(conan inspect --raw name .)" >> $GITHUB_ENV
      - name: Get package name Conan 2
        if: matrix.conan == '2.0'
        run: |
          echo "package_name=$(conan inspect -f json . | jq .name -r)" >> $GITHUB_ENV
      - name: Conan create
        run: |
          conan config install http://github.com/user/conan_config/.git --type git -sf conan${{ matrix.conan }}
          conan create . -s build_type=${{ matrix.build_type }} `
            -pr:b=${{ matrix.profile }} -pr:h=${{ matrix.profile }} `
            -b missing -b outdated -b ${{env.package_name}}* `
            ${{ env.USER_CHANNEL }}
      - name: Conan upload
        run: |
          conan upload --confirm -r sintef ${{ env.package_name}}* --force ${{ env.UPLOAD_FLAGS }}
