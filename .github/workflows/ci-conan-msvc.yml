---
name: MSVC Conan

on: [push, workflow_dispatch]

env:
  CONAN_UPLOAD: ${{ secrets.CONAN_URL }}
  CONAN_PASSWORD_SINTEF: ${{ secrets.CONAN_PASSWORD }}
  CONAN_LOGIN_USERNAME_SINTEF: ${{ secrets.CONAN_USER }}
  matrix_profile: msvc17

jobs:
  conan-with-msvc:
    name: Conan
    runs-on: windows-2022
    env:
      USER_CHANNEL: "${{ matrix.conan == '1.0' && 'sintef/stable' || '--user sintef --channel stable' }}"
      UPLOAD_FLAGS: "${{ matrix.conan == '1.0' && '--all' || '' }}"
    strategy:
      fail-fast: false
      matrix:
        conan: ["1.0", "2.0"]
        compiler_version: [191, 192, 193]
        build_type: [Debug, Release]
    steps:
      - uses: actions/checkout@v3
      - name: Install prerequisites
        run: |
          pip3 install --upgrade setuptools pip
          pip3 install --upgrade conan~=${{ matrix.conan }}
      - name: Configure Conan
        run: |
          conan remote add sintef ${{ env.CONAN_UPLOAD }}
      - name: Get package name Conan 1
        if: matrix.conan == '1.0'
        shell: pwsh
        run: |
          $package_name=conan inspect --raw name .
          echo "package_name=$package_name" >> $GITHUB_ENV
      - name: Get package name Conan 2
        if: matrix.conan == '2.0'
        shell: pwsh
        run: |
          $package_name=conan inspect -f json . | jq .name -r
          echo "package_name=$package_name" >> $GITHUB_ENV
      - name: Conan create
        run: |
          conan config install https://github.com/sintef-ocean/conan-configs.git --type git -sf conan${{ matrix.conan }}
          conan create . -s build_type=${{ matrix.build_type }} `
            -s compiler.version=${{ matrix.compiler_version }} `
            -pr:b=${{ env.matrix_profile }} -pr:h=${{ env.matrix_profile }} `
            -b missing -b outdated -b ${{env.package_name}}* `
            ${{ env.USER_CHANNEL }}
      - name: Conan upload
        run: |
          conan upload --confirm -r sintef ${{ env.package_name}}* --force ${{ env.UPLOAD_FLAGS }}
